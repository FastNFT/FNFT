% MEX_FNFT_NSEV_INVERSE Fast inverse nonlinear Fourier transform for the
% nonlinear Schroedinger equation with vanishing boundaries.
%
%   q = MEX_FNFT_NSEV_INVERSE(contspec, XI, bound_states, ...
%                             normconsts_or_residuals, D, T, kappa);
%   q = MEX_FNFT_NSEV_INVERSE(contspec, XI, bound_states, ...
%                             normconsts_or_residuals, D, T, kappa, ...
%                             OPTIONAL INPUTS);
%
% DESCRIPTION
%   Provides an interface to the C routine fnft_nsev_inverse.
%
% INPUTS
%   contspec        Complex row vector of length M>=D, contains the samples
%                   of the reflection coefficient, the b-scattering 
%                   coefficient or the inverse Fourier transform of the 
%                   b-scattering coefficient on an equidistant grid.
%                   Pass [] if the continuous spectrum is zero 
%                   (i.e., a multi-soliton is desired)
%   XI              Real 1x2 vector, contains the location of the first and
%                   the last sample in contspec; must be computed with
%                   MEX_FNFT_NSEV_INVERSE_XI
%   bound_states    Complex row vector, contains the desired bound states.
%                   Pass [] if the discrete spectrum is empty.
%   normconsts_or_residues Complex row vector, same length as bound_states.
%                   Contains the corresponding norming constants (default) or,
%                   if the corresponding option is passed, residues. Pass []
%                   if the discrete spectrum is empty.
%   D               Real scalar, number of time domain samples; must be a
%                   positive power of two
%   T               Real 1x2 vector, contains the location of the first and
%                   the last sample in q
%   kappa           +1.0 or -1.0
%
% OPTIONAL INPUTS
%   It is possible to provide additional inputs. These come either in the
%   form of a single string or of a string followed by a value.
%
%   'cstype_reflection_coefficient' The vector contspec is assumed to
%                   contain samples of the reflection coefficient
%                   b(xi)/a(xi) on the grid specified by XI (default).
%   'cstype_b_of_xi' The vector contspec is assumed to contain samples of
%                   b(xi) on the grid specified by XI.
%   'cstype_B_of_tau' The vector contspec is assumed to contain samples of
%                   the inverse Fourier transform B(tau) of b(xi) on the
%                   grid tau_n=2*t_n, where the t_n are the locations at
%                   which q(t) is computed. REQUIRES M=D and T(1)=-T(2).
%   'dstype_residues' The array normconsts_or_residues contains residues
%                   instead of residues (the default behavior).
%   'csmethod_tfmatrix_contains_refl_coeff' The transfer matrix that is
%                   built during the inversion of the reflection
%                   coefficient contains its FFT (default). Works only in
%                   the 'cstype_reflection_coefficient' mode.
%   'csmethod_tfmatrix_contains_ab_from_iter' The transfer matrix that is
%                   built during the inversion of the reflection
%                   coefficient polynomial approximations of a(xi) and
%                   b(xi) that are built in an iterative manner. REQUIRES
%                   M=D and 'cstype_reflection_coefficient'. Defocusing
%                   case only.
%   'csmethod_use_seed_potential_instead' Adds the discrete spectrum on top
%                   a given seed potential q0(t). The continuous spectrum
%                   has to be empty (contspec=[]) in this case. The next
%                   input has to be a complex 1xD vector that contains the
%                   samples of the seed potential at the sames times at
%                   which q(t) is given.
%   'quiet'         Turns off messages generated by then FNFT C library.
%                   (To turn off the messages generated by the mex
%                   interface functions, use Matlab's warning and error
%                   commands instead.)
%
% OUTPUTS
%   q               Complex row vector of length D

% This file is part of FNFT.
%
% FNFT is free software; you can redistribute it and/or
% modify it under the terms of the version 2 of the GNU General
% Public License as published by the Free Software Foundation.
%
% FNFT is distributed in the hope that it will be useful,
% but WITHOUT ANY WARRANTY; without even the implied warranty of
% MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
% GNU General Public License for more details.
%
% You should have received a copy of the GNU General Public License
% along with this program. If not, see <http://www.gnu.org/licenses/>.
%
% Contributors:
% Sander Wahls (TU Delft) 2017-2018.